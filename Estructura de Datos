# Archivo: producto.py
class Producto:
    def __init__(self, codigo, nombre, precio, cantidad):
        self.codigo = codigo
        self.nombre = nombre
        self.precio = precio
        self.cantidad = cantidad

    def actualizar_precio(self, nuevo_precio):
        self.precio = nuevo_precio

    def actualizar_cantidad(self, nueva_cantidad):
        self.cantidad = nueva_cantidad

    def __str__(self):
        return f"{self.codigo} - {self.nombre}: ${self.precio} ({self.cantidad} unidades)"

# Archivo: inventario.py
from producto import Producto

class Inventario:
    def __init__(self):
        self.productos = {}

    def agregar_producto(self, producto):
        self.productos[producto.codigo] = producto

    def eliminar_producto(self, codigo):
        if codigo in self.productos:
            del self.productos[codigo]

    def actualizar_producto(self, codigo, precio=None, cantidad=None):
        if codigo in self.productos:
            if precio is not None:
                self.productos[codigo].actualizar_precio(precio)
            if cantidad is not None:
                self.productos[codigo].actualizar_cantidad(cantidad)

    def buscar_producto(self, codigo):
        return self.productos.get(codigo, None)

    def mostrar_inventario(self):
        for producto in self.productos.values():
            print(producto)

# Archivo: main.py
from inventario import Inventario
from producto import Producto

def main():
    inventario = Inventario()
    
    p1 = Producto("001", "Laptop", 800, 5)
    p2 = Producto("002", "Mouse", 20, 50)
    
    inventario.agregar_producto(p1)
    inventario.agregar_producto(p2)
    
    print("Inventario inicial:")
    inventario.mostrar_inventario()
    
    inventario.actualizar_producto("001", precio=750)
    inventario.eliminar_producto("002")
    
    print("Inventario actualizado:")
    inventario.mostrar_inventario()
    
if __name__ == "__main__":
    main()
